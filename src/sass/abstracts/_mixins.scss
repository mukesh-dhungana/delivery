@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin absCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}


@mixin flexCenter {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

@mixin pseudo($display: block, $pos: absolute, $content: ''){
	content: $content;
	display: $display;
	position: $pos;
}

@mixin placeholder {
    &::-webkit-input-placeholder {@content};
    &:-moz-placeholder           {@content};
    &::-moz-placeholder          {@content};
    &:-ms-input-placeholder      {@content} ; 
}
@mixin placeholderText {
    color: #aaa;
    font-family: "Roboto", "Helvetica", "Arial", sans-serif;
    font-weight: 500;
    line-height: 1.5;
    letter-spacing: 0.025em ;
    font-size: 14px;
}

@mixin buttonMixin($bgColor,$color,$hoverType,$hoverLevel:7) {
    background-color: #{$bgColor};
    color: #{$color};

    span {
      color: #{$color} !important;
    }
    svg,i {
        color: #{$color} !important;
      }
    &:hover {
        @if $hoverType == lighten {
            background-color: lighten($bgColor, $hoverLevel);
        }
        @else{
            background-color: darken($bgColor, $hoverLevel);
        }
    }
}
@mixin buttonOutlineMixin($bgColor,$color,$hoverType,$hoverLevel:7) {
    border: 1px solid #{$bgColor};
    color: #{$bgColor};

    span {
      color: #{$bgColor} !important;
    }
    svg,i {
        color: #{$bgColor} !important;
      }
    &:hover {
        color:#{$color};
        span {
            color: #{$color} !important;
        }
        svg,i {
            color: #{$color} !important;
        }
        @if $hoverType == lighten {
            background-color: lighten($bgColor, $hoverLevel);
        }
        @else{
            background-color: darken($bgColor, $hoverLevel);
        }
    }
}

@mixin overlayBefore($color){
    &:before{
        content:'';
        position: absolute;
        top:0;
        left:0;
        width: 100%;
        height: 100%;
        background-color: $color;
    }
}
@mixin overlay($color){
    position: absolute;
    top:0;
    left:0;
    width: 100%;
    height: 100%;
    background-color: $color;
}

// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + :      Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components

1em = 16px
*/
@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media only screen and (min-width:0) and (max-width: 599px) { @content };    //600px
    }
    @else if $breakpoint == sm-tab {
        @media only screen and (min-width: 600px) { @content };    //600px
    }
    @else if $breakpoint == tab {
        @media only screen and (min-width: 900px) { @content };     //900px56
    }
    @else if $breakpoint == desktop {
        @media only screen and (min-width: 1200px) { @content };    //1200px
    }
    @else if $breakpoint == med-desktop {
        @media only screen and (min-width: 1440px){ @content };    //1440px
    }
    @else if $breakpoint == big-desktop {
        @media only screen and (min-width: 1800px) { @content };    //1800
    }
    @else {
        @warn "Breakpoint mixin supports: phone, sm-tab, tab, desktop,med-desktop,big-desktop";
      }
}

@mixin customScroll{
    /* width */
    ::-webkit-scrollbar {
        width: 10px;
        border-radius: 4px;
    }
    
    /* Track */
    ::-webkit-scrollbar-track {
        background: #f1f1f1;
    }
    
    /* Handle */
    ::-webkit-scrollbar-thumb {
        background: #888;
    }
    
    /* Handle on hover */
    ::-webkit-scrollbar-thumb:hover {
        background: #555; 
    }
}

@mixin heading3{
    font-size: 16px;
    color:#333;
    font-weight: normal;
    line-height: 1.7;
}

@mixin dropDownContent{
    position: absolute;
    width: 10rem;
    opacity: 0;
    visibility: hidden;
    // top: 60px;
    // left: -110px;
    background: #fff;
    border: 1px solid #e3e3e3;
    z-index: 2;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    z-index: 100;
    border-radius: 4px;
    transition: 0.3s all ease-in-out;

    &:after{
        content:'';
        box-sizing: border-box;
        position: absolute;
        height: 15px;
        width: 15px;
        z-index: -1;
        background-color: #fff;
        border: 1px solid #e5eaed;
        border-bottom: 1px solid transparent;
        // border-left: 1px solid transparent;
        border-right: 1px solid transparent;
        transform: rotate(45deg);
        top: -8px;
        left: 75%;
    }
}
